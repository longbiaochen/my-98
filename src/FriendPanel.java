
import com.meterware.httpunit.HttpUnitOptions;
import com.meterware.httpunit.WebConversation;
import com.meterware.httpunit.WebResponse;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author  Longbiaochen
 */
public class FriendPanel extends javax.swing.JPanel {

    String name;
    String homepage;
    String ip;
    String port;
    boolean state;
    int panelID;
    ImageIcon labelIcon;
    WebConversation wc;
    ChatFrame cf;
    //boolean isChat = false;

    /** Creates new form TestPanel */
    public FriendPanel(String name, String homepage, WebConversation wc) {
        this.name = name;
        this.wc = wc;

        useHomepage(homepage);

        initComponents();

        friendLabel.setText(name);
        setIcon(state);
    }

    public void setIcon(boolean state) {

        try {
            if (state == true) {
                labelIcon = new ImageIcon(getClass().getResource("/online.gif"));
            } else if (state == false) {
                labelIcon = new ImageIcon(getClass().getResource("/offline.gif"));
            }
        } catch (Exception e) {
            System.out.println("Set labelIcon Failure.");
            e.printStackTrace();
        }
        friendLabel.setIcon(labelIcon);
        friendLabel.updateUI();

    }

    public String getLogoURLstr() {
        HttpUnitOptions.setScriptingEnabled(false);
        try {
            //System.out.println(name);
            WebResponse fir = wc.getResponse("http://www.cc98.org/dispuser.asp?name=" + name);
            String fip = fir.getText();
            //System.out.println(fip);

            int beg = fip.indexOf("状态：");
            //System.out.println(beg);
            int end = fip.indexOf("论坛活力");
            //System.out.println(end);
            String tmp = fip.substring(beg, end);
            beg = tmp.indexOf("img src=") + 8;
            tmp = tmp.substring(beg);
            end = tmp.indexOf(" ");
            String logoURLStr = "http://www.cc98.org/" + tmp.substring(0, end);
            return logoURLStr;
        } catch (Exception e) {
            e.printStackTrace();
            return new String("");
        }
    }

    public void useHomepage(String homepage) {
        String tmp = Transfer.decrypt(homepage);
        System.out.println(tmp);
        //homepage format=IP:10.71.45.98:8080
        if (tmp.equals("") || tmp.indexOf("IP:") < 0) {
            state = false;
            ip = "";
            port = "";
            this.homepage = "";
        } else {
            state = true;
            ip = tmp.split(":")[1];
            port = tmp.split(":")[2];
            this.homepage = homepage;
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        friendLabel = new javax.swing.JLabel();

        setBackground(java.awt.Color.white);

        friendLabel.setText("test panel");
        friendLabel.setMaximumSize(null);
        friendLabel.setMinimumSize(null);
        friendLabel.setPreferredSize(new java.awt.Dimension(180, 25));
        friendLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                friendLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                friendLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                friendLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(friendLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(friendLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

private void friendLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_friendLabelMouseClicked
    if (evt.getClickCount() == 2) {
        if (this.state == false) {
            JOptionPane.showMessageDialog(null,"对不起,目前暂时不支持向离线好友发送消息:)");
        } else {
            if (this.cf != null) {
                this.cf.setVisible(true);
            } else {
                this.cf = new ChatFrame(this);
                this.cf.setVisible(true);            
            }
        }
    }// TODO add your handling code here:
}//GEN-LAST:event_friendLabelMouseClicked

private void friendLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_friendLabelMouseEntered
    this.setBackground(new Color(230, 240, 250));// TODO add your handling code here:
}//GEN-LAST:event_friendLabelMouseEntered

private void friendLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_friendLabelMouseExited
    this.setBackground(new Color(255, 255, 255));// TODO add your handling code here:
}//GEN-LAST:event_friendLabelMouseExited
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel friendLabel;
    // End of variables declaration//GEN-END:variables
}
